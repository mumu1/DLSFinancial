@using BEYON.ViewModel.App
@model ApplicationFormVM

<style>
    .modal-dialog {
        min-width: 900px;
        max-height: 900px;
    }

    div.DTE_Body div.DTE_Body_Content div.DTE_Field {
        float: left;
        width: 50%;
        padding: 5px 20px;
        clear: none;
        box-sizing: border-box;
    }


    div.DTE_Body div.DTE_Form_Content:after {
        content: ' ';
        display: block;
        clear: both;
    }

    div.DTE_Body div.DTE_Body_Content div.DTE_Field select {
        float: left;
        height: 30px;
        width: 100%;
    }
    /*div.DTE_Body div.DTE_Body_Content div.DTE_Field input[type=radio] {
        float: left;
        width: 50%;
        padding: 5px 20px;
        clear: none;
    }*/
</style>
<!-- widget div-->
<section id="widget-grid" class="">
    <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-togglebutton="false" data-widget-collapsed="false" data-widget-colorbutton="false">
        <header>
            <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
            <h2>申请单 </h2>
        </header>

        <div role="content">
            <!-- widget content -->
            <div class="widget-body no-padding">
                <form action="" id="apply-form" class="smart-form" style="padding-left:8px;padding-right:8px;" onsubmit="return saveApply();">
                    <fieldset>
                        <section>
                            <div class="note" style="padding-left:15px;">
                                <div>
                                    填表说明：
                                </div>
                                <div>
                                    1.各类劳务费应由领款本人签收并经课题负责人、经办人签字。
                                </div>
                                <div>
                                    2.现金和转账发放都可使用该表，如通过银行转账发放，请准确填写收款本人的银行账户、开户银行、账户名称等信息。
                                </div>
                                <div>
                                    3.单位填写分类：所内在职职工、所内注册学生、所内劳务流程。客座学生和外单位人员填写具体工作单位。
                                </div>
                            </div>
                        </section>
                        <div class="row">
                            <section class="col col-3">
                                <label class="label">部门</label>
                                <label class="select">
                                    <select id="dept" name="DepartmentName">

                                        @*<option value="科研处" selected="">科研处</option>
                                            <option value="财务处">财务处</option>*@
                                    </select> <i></i>
                                </label>
                            </section>
                            <section class="col col-3">
                                <label class="label">报销事由</label>

                                <label class="select">
                                    <select id="refundType" name="RefundType">
                                        @*<option value="劳务" selected="@Model.RefundType">劳务</option>
                    <option value="报告">报告</option>*@
                                    </select> <i></i>
                                </label>
                            </section>
                            <section class="col col-3">
                                <label class="label">课题号</label>
                                <label class="input">
                                    <i class="icon-prepend fa fa-info"></i>
                                    <input type="text" id="ProjectNumber" name="ProjectNumber" placeholder="课题号" value="@Model.ProjectNumber">
                                </label>
                            </section>                            
                            <section class="col col-2">
                                <label class="label">课题负责人</label>
                                <label class="input">
                                    <i class="icon-prepend fa fa-user"></i>
                                    <input type="text" id="projectDirector" name="ProjectDirector" placeholder="课题负责人" value="@Model.ProjectDirector">
                                </label>
                            </section>                         
                        </div>
                        <div class="row">
                            <section class="col col-3">
                                <label class="label">支付类型</label>
                                <label class="select">
                                    <select id="paymentType" name="PaymentType">
                                        <option value="银行转账" selected="">银行转账</option>
                                        <option value="现金支付">现金支付</option>
                                    </select> <i></i>
                                </label>
                            </section>
                            <section class="col col-3">
                                <label class="label">合计金额</label>
                                <label class="input">
                                    <i class="icon-prepend fa fa-yen"></i>
                                    <input type="number" id="summation" name="Summation" readonly="readonly" placeholder="" value="@Model.Summation">
                                </label>
                            </section>
                            <section class="col col-2">
                                <label class="label">经办人</label>
                                <label class="input">
                                    <i class="icon-prepend fa fa-user"></i>
                                    <input type="text" name="Agent" placeholder="经办人" value="@Model.Agent">
                                </label>
                            </section>                        
                            </div>
                            <section>
                                <label class="label">关于工作内容、工作时间等的描述(必填)</label>
                                <label class="textarea">
                                    <textarea rows="2" name="ApplyDesp" style="float:left;" placeholder=" 关于工作内容、工作时间等的描述(必填)">@Model.ApplyDesp</textarea>
                                </label>
                            </section>
                            <input type="text" name="SerialNumber" placeholder="流水账号" style="visibility:hidden" value="@Model.SerialNumber">
                            <input type="text" name="SubmitTime" placeholder="提交时间" style="visibility:hidden" value="@Model.SubmitTime">
                            <input type="text" name="AuditTime" placeholder="审核时间" style="visibility:hidden" value="@Model.AuditTime">
                            <input type="text" name="AuditStatus" placeholder="审核状态" style="visibility:hidden" value="@Model.AuditStatus">
                            <input type="text" name="UserName" placeholder="用户邮箱" style="visibility:hidden" value="@Model.UserName">
</fieldset>
                    <fieldset>
                        <section>
                            <table id="datatable_create_form" class="table table-striped table-bordered table-hover" width="100%"></table>
                        </section>
                    </fieldset>
                   
                    <footer>
                        <button type="submit" name="submit" class="btn btn-primary">保存</button>
                        <button type="button" class="btn btn-default" onclick="closeFrom();">取消</button>
                    </footer>
                </form>

            </div>
            <!-- end widget content -->
        </div>
    </div>
    <!-- end widget div -->
</section>

<link rel="stylesheet" href="@Url.Content("~/Content/css/jAlert-v3.css")">
<script src="@Url.Content("~/Scripts/Custom/App/IdentifyCard.js")"></script>
<script src="@Url.Content("~/Scripts/Custom/App/File.js")"></script>
<script src="@Url.Content("~/Scripts/alert/jAlert-v3.min.js")"></script>
<script src="@Url.Content("~/Scripts/alert/jAlert-functions.min.js")"></script>


<script>
    pageSetUp();
    var table;
    var bankListOpt = [];      //开户银行下拉菜单对应数组
    var titleListOpt = [];        //职称下拉菜单对应数组
    registerBankAccount();     //从数据库读取开户银行下拉菜单对应数组
    registerTitle();                //从数据库读取职称下拉菜单对应数组
    registerRefundType();   //从数据库读取报销事由下拉菜单对应数组
    registerDepartment();   //从数据库读取部门下拉菜单对应数组

    //根据输入课题号，提示用户课题名称是否正确
    $("#ProjectNumber").blur(function () {
        var projectNumber = $('#ProjectNumber').val();
        $.ajax({
            type: "GET",
            async: false,
            url: "../BasicDataManagement/TaskManage/GetDataByID?projectNumber=" + projectNumber,
            //data: params,
            contentType: "application/json; charset=utf-8",
            datatype: "text",
            success: function (data) {
                if (data == "该课题号不存在。") {
                   // alert(data + "请重新填写正确的课题号。", '课题确认');
                    $.jAlert({ //this is the normal usage
                        'title': '课题确认',
                        'content': data + '请重新填写正确的课题号。',
                        'theme': 'black',
                        'size': 'xsm'
                    });   
                } else {
                    var taskArray = data.split(",");
                  //  alert('您填写的课题号对应的课题名称为：' + taskArray[0] + ',若有误请重新填写正确的课题号。', '课题确认');
                    $.jAlert({ //this is the normal usage
                        'title': '课题确认',
                        'content': '您填写的课题号对应的课题名称为：' + taskArray[0] + ',若有误请重新填写正确的课题号。',
                        'theme': 'black',
                        'size': 'xsm'
                    });   
                    $('#projectDirector').val(taskArray[1]);
                }
            },
            error: function () {
                toastr.error('获取课题数据失败！');
            }
        });
    });
  
    
    var editor = new $.fn.dataTable.Editor({
        "ajaxUrl": {
            "create": "@Url.Action("CreatePersonal")",
            "edit": "@Url.Action("EditPersonal")",
            "remove": "@Url.Action("DeletePersonal")"
        },
        "table": "#datatable_create_form",
        fields: [
            { name: "Id", label: "编号:", type: "hidden" },
            { name: "SerialNumber", label: "申请单流水号:", type: "hidden" },
            { name: "Name", label: "姓名:", type: "text" },
            { name: "Company", label: "单位:", type: "text" },
            {
                name: "CertificateType",
                label: "证件类型:",
                type: "select",
                options: [
                          { label: "居民身份证", value: "居民身份证" },
                          { label: "中国护照", value: "中国护照" },
                          { label: "外国护照", value: "外国护照" },
                          { label: "军官证", value: "军官证" },
                          { label: "士兵证", value: "士兵证" },
                          { label: "武警警官证", value: "武警警官证" },
                          { label: "港澳居民来往内地通行证", value: "港澳居民来往内地通行证" },
                          { label: "台湾居民来往大陆通行证", value: "台湾居民来往大陆通行证" },
                          { label: "香港身份证", value: "香港身份证" },
                          { label: "台湾身份证", value: "台湾身份证" },
                          { label: "澳门身份证", value: "澳门身份证" },
                          { label: "外国人永久居留证", value: "外国人永久居留证" },
                ],
                def: "居民身份证"
            },
            { name: "CertificateID", label: "证件号码:" },
            { name: "Tele", label: "联系电话:", },
            { name: "Nationality", label: "国籍:", type: "text", def: "中国" },
            {
                name: "Title",
                label: "职称:",
                type: "select",
                options: titleListOpt,
            },
            {
                name: "PersonType",
                label: "人员类型:",
                type: "select",
                options: [
                        { label: "所内", value: "所内" },
                        { label: "所外", value: "所外" }
                ],
                def: "所内"
            },
             { name: "Amount", label: "金额(元):", type: "text" },
              {
                  name: "TaxOrNot",
                  label: "是否含税:",
                  type: "radio",
                  options: [
                      { label: "含税", value: "含税" },
                      { label: "不含税", value: "不含税" }
                  ],
                  def: "含税"
              },           
            {
                name: "Bank",
                label: "开户银行:",
                type: "select",             
                options: bankListOpt,
                def: "工商银行"
            },
            { name: "AccountNumber", label: "银行账户:", type: "text" },
            { name: "BankDetailName", label: "开户行详细名称:", type: "text", fieldInfo: "除工商银行外，选择其他银行转账均需填写该项" },
             {
                name: "PaymentType",
                label: "支付类型:",
                type: "text",
                type: "hidden"
            },
            { name: "Signature", label: "领取人签字:", type: "text", type: "hidden" }
        ]
    });

    //支付类型切换事件
    $("#paymentType").change(function () {
        var paymentType = $('#paymentType').val();
        if (table !== undefined) {
            if (paymentType == "现金支付") {
                editor.field('Bank').hide();                                 
                editor.field('AccountNumber').hide();
                editor.field('BankDetailName').hide();
                $('#datatable_create_form').DataTable().column(11).visible(false);   //开户银行列隐藏
                $('#datatable_create_form').DataTable().column(12).visible(false);  //银行账号列隐藏
                $('#datatable_create_form').DataTable().column(13).visible(false);  //开户行详细名称列隐藏
            } else if (paymentType == "银行转账") {
                editor.field('Bank').show();
                editor.field('AccountNumber').show();
                editor.field('BankDetailName').show();
                $('#datatable_create_form').DataTable().column(11).visible(true);
                $('#datatable_create_form').DataTable().column(12).visible(true);
                $('#datatable_create_form').DataTable().column(13).visible(true);
            }
        }
     
    });
    //初始化创建框显示
    editor.on('onInitCreate', function () {
        //      editor.disable('Amount');
      

        return true;
    });



    //初始化编辑框显示
    editor.on('onInitEdit', function () {
        var CertificateType = editor.field('CertificateType');

        //    editor.disable('Amount');
    });

    //提交前条件判断
    editor.on('preSubmit', function (e, data, action) {
        if (action !== 'remove') {
            var CertificateType = editor.field('CertificateType');
            var CertificateID = editor.field('CertificateID');
            var Amount = editor.field('Amount');
            var PersonType = editor.field('PersonType');
            var personName = editor.field('Name');
            //var PaymentType = editor.field('PaymentType');
            var paymentType = $('#paymentType').val();
            editor.field('PaymentType').val(paymentType);
            var Bank = editor.field('Bank');
            var AccountNumber = editor.field('AccountNumber');
            var BankDetailName = editor.field('BankDetailName');
            //0.各项必填验证
            if (personName.val().trim() == "") {
                personName.error("请填写人员姓名");
            }
            if (paymentType == "银行转账" && AccountNumber.val().trim() == "") {
                AccountNumber.error("请填写银行账号");
            }
            if (Bank.val() != "工商银行" && BankDetailName.val().trim == "") {
                BankDetailName.error("请填写开户行详细名称");
            }

            //1.身份证检查
            if (action === 'edit' && CertificateType.isMultiValue()) {
                toastr.error("只能选取一行编辑");
                return false;
            }

            if (!CertificateID.val()) {
                CertificateID.error('证件号码不能为空');
            }

            if (table !== undefined)
            {
                var rowData = $('#datatable_create_form').DataTable().rows().data();
                $.each($(rowData), function (key, value) {
                    if(value["CertificateID"] === CertificateID.val())
                    {
                        CertificateID.error('该申请单中已经存在相同的人员信息，请修改后重新提交!');
                        return;
                    }
                });
            }
            
            if (CertificateType.val() === '身份证') {
                var Validator = new IDValidator();
                if (!Validator.isValid(CertificateID.val())) {
                    CertificateID.error('身份证号码不正确');
                }
            }

            //2.金额为数值的验证
            //如果不是数值
            if (isNaN(new Number(Amount.val()))) {
                Amount.error("金额格式错误，请填写数值型");
            }

            //3.所内人员验证，若证件ID不存在于基本数据表，则必须选择所外
            $.ajax({
                type: "GET",
                async: false,
                url: "../BasicDataManagement/WageBaseTable/GetNameByCerID?certificateID=" + CertificateID.val(),
                //data: params,
                contentType: "application/json; charset=utf-8",
                datatype: "text",
                success: function (data) {
                    if (data == "") {
                        if (PersonType.val() == "所内") {
                            PersonType.error("该人员不是所内人员，需要选择所外");
                        }
                    }
                    else {
                        if (data != personName.val() && PersonType.val() == "所内") {
                            CertificateID.error('该证件号码与人员不符，请检查');
                        } else {
                            if (PersonType.val() == "所外") {
                                PersonType.error("该人员是所内人员，需要选择所内");
                            }
                        }
                    }
                },
                error: function () {
                    toastr.error('获取人员信息数据失败！');
                }
            });

            //4.验证现金支付是否大于3次
            if (paymentType == "现金支付") {
                $.ajax({
                    type: "GET",
                    async: false,
                    url: "../App/ApplyForm/GetCashCount?certificateID=" + CertificateID.val(),
                    //data: params,
                    contentType: "application/json; charset=utf-8",
                    datatype: "text",
                    success: function (data) {
                        if (data != "") {
                            Amount.error(data);
                        }
                    },
                    error: function () {
                        toastr.error('获取支付类型统计数据失败！');
                    }
                });
            }

            // 如果有错误报告，不能提交编辑结果
            if (this.inError()) {
                return false;
            }

            if (action === 'create') {
                var sumBefore = $('#summation').val();
                $('#summation').val(new Number(sumBefore) + new Number(Amount.val()));
                data.data[0].SerialNumber = "@Model.SerialNumber";
                //  data.data[0].Summation = $('#summation').val();
                return true;
            }

        }
    });

    function initTable() {

        var buttons = [
            {
                text: "新增", extend: "create", editor: editor
            },
            {
                text: "修改", extend: "edit", editor: editor
            },
            {
                text: "删除", extend: "remove", editor: editor
            },
            @*{
                    text: "输出打印", action: function (e, dt, node, config) {
                        var rowData = dt.rows({ selected: true }).data();
                        $.each($(rowData), function (key, value) {
                            $.ajax({
                                type: "POST",
                                url: "@Url.Action("ExportApplyPersons")",
                                dataType: "json",
                                contentType: "application/json; charset=utf-8",
                                data: JSON.stringify({ SerialNumber: value["SerialNumber"] }),
                                success: function (result) {
                                    fileDownload('../App/ApplyForm/DownloadFile', result);
                                    toastr.success('数据导出完成');
                                },
                                error: function () {
                                    toastr.error('网络错误，请重新提交！');
                                }
                            });
                        });
                    }
                },*@
            //{
            //    text: "列显示",
            //    extend: 'colvis'
            //}
        ];

        table = $('#datatable_create_form').dataTable({
            dom: 'Bfrtip',
            colReorder: true,
            ajax: {
                url: '@Url.Action("GetPersonalData")',
                type: "POST",
                data: { "serialNumber": "@Model.SerialNumber" }
            },
            searching: true,
            ordering: true,
            select: true,
            info: true,
            paginate: false,    //是否显示（应用）分页器
            sort: true,         //是否启动各个字段的排序功能
            stateSave: false,
            stateDuration: 60 * 60 * 12,
            scrollX: true,
            autoWidth: true,
            bProcessing: true,
            paging: false,
            buttons: buttons,
            columns: [
                //{ data: "SerialNumber", title: "申请单流水号", visible: false },
                { data: "Id", title: "编号", visible: false },
                { data: "Name", title: "姓名" },
                { data: "CertificateType", title: "证件类型" },
                { data: "CertificateID", title: "证件号码" },
                { data: "Company", title: "单位" },
                { data: "Tele", title: "联系电话" },
                { data: "PersonType", title: "人员类型" },
                { data: "Nationality", title: "国籍" },
                { data: "Title", title: "职称" },
                { data: "TaxOrNot", title: "是否含税" },
                { data: "Amount", title: "金额(元)" },
                { data: "Bank", title: "开户银行", attribute: "开户银行" },
                { data: "AccountNumber", title: "银行账号" },
                { data: "BankDetailName", title: "开户行详细名称" }
                //{ data: "AccountName", title: "账户名称", visible: false },
                //{ data: "PaymentType", title: "支付类型" },
                //{ data: "Signature", title: "领取人签字", visible: false },

            ],
            oLanguage: {
                "sLengthMenu": "每页显示 _MENU_ 条记录",
                "sZeroRecords": "抱歉， 没有找到",
                "sInfo": "显示 _START_ 到 _END_ 条记录，总共 _TOTAL_ 条记录",
                "sInfoEmpty": "没有数据",
                "sInfoFiltered": "(从 _MAX_ 条数据中检索)",
                "sZeroRecords": "没有检索到数据",
                "sSearch": "搜索名称:",
                "sSelected": "选中 _TOTAL_ 条记录",
                "oPaginate": {
                    "sFirst": "首页",
                    "sPrevious": "前一页",
                    "sNext": "后一页",
                    "sLast": "尾页"
                }
            }
        });
    }

    initTable();

    function closeFrom() {
        if ($("#widget-grid")[0]) {
            $("#widget-grid").jarvisWidgets("destroy");
            $("#widget-grid").remove();
        }

        if ($(".content-wrapper")[0]) {
            $(".content-wrapper").show()
        }
    }

    function saveApply() {
        $.ajax({
            type: "POST",
            url: "@Url.Action("Save")",
            data: $('#apply-form').serialize(),
            success: function (result) {
                //保存列表信息
                var rows = $('#datatable_create_form').DataTable().rows();
                if (rows.count() > 1) {
                    $('#datatable_tabletools').DataTable().ajax.reload();
                    closeFrom();
                    return;
                }

                var rowDatas = rows.data();
                var queryDatas = [];
                $.each($(rowDatas), function (key, value) {
                    queryDatas.push(value);
                });
                //var datas = table.rows().data();
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("InsertOrUpdatePersonal")",
                    data: JSON.stringify(queryDatas),
                    contentType: "application/json",
                    success: function (result) {
                        $('#datatable_tabletools').DataTable().ajax.reload();
                        closeFrom();
                    }
                })
            },
            error: function (data) {
                toastr.error(data.responseText);
            }
        });
        return false;
    }

    function registerBankAccount() {
        $.ajax({
            type: "GET",
            async: false,
            url: "../BasicDataManagement/BankAccount/GetAllData",
            //data: params,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $.each(data.data, function (k, v) {
                    bankListOpt.push({ label: v.BankName, value: v.BankName });
                })
            },
            error: function () {
                toastr.error('获取开户银行数据失败！');
            }
        });
    }

    function registerTitle() {
        $.ajax({
            type: "GET",
            async: false,
            url: "../BasicDataManagement/Professional/GetAllData",
            //data: params,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $.each(data.data, function (k, v) {
                    titleListOpt.push({ label: v.TitleName, value: v.TitleName });
                })
            },
            error: function () {
                toastr.error('获取职称数据失败！');
            }
        });
    }
    function registerRefundType() {
        $.ajax({
            type: "GET",
            async: false,
            url: "../BasicDataManagement/Reimbursement/GetAllData",
            //data: params,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $('#refundType').html("");
                $.each(data.data, function (k, v) {
                    $("#refundType").append("<option>" + v.RefundTypeName + "</option>");
                })
                if ('@Model.RefundType' != "")
                    $("#refundType").find("option:contains('@Model.RefundType')").attr("selected", true);
            },
            error: function () {
                toastr.error('获取报销事由数据失败！');
            }
        });
    }

    function registerDepartment() {
        $.ajax({
            type: "GET",
            async: false,
            url: "../BasicDataManagement/Department/GetAllData",
            //data: params,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $("#dept").html("");
                $.each(data.data, function (k, v) {
                    $("#dept").append("<option>" + v.DepartmentName + "</option>");
                })
                if ('@Model.DepartmentName' != "")
                    $("#dept").find("option:contains('@Model.DepartmentName')").attr("selected", true);
            },
            error: function () {
                toastr.error('获取部门数据失败！');
            }
        });
    }
</script>
