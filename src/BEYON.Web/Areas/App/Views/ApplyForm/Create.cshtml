@using BEYON.ViewModel.App
@model ApplicationFormVM


<style>
    .modal-dialog {
        min-width: 900px;
        max-height: 900px;
    }

    div.DTE_Body div.DTE_Body_Content div.DTE_Field {
        float: left;
        width: 50%;
        padding: 5px 20px;
        clear: none;
        box-sizing: border-box;
    }


    div.DTE_Body div.DTE_Form_Content:after {
        content: ' ';
        display: block;
        clear: both;
    }

    div.DTE_Body div.DTE_Body_Content div.DTE_Field select {
        float: left;
        height: 30px;
        width: 100%;
    }
    /*div.DTE_Body div.DTE_Body_Content div.DTE_Field input[type=radio] {
        float: left;
        width: 50%;
        padding: 5px 20px;
        clear: none;
    }*/
</style>

<!-- widget div-->
<section id="widget-grid" class="">
    <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-togglebutton="false" data-widget-collapsed="false" data-widget-colorbutton="false">
        <header>
            <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
            <h2>申请单 </h2>
        </header>

        <div role="content">
            <!-- widget content -->
            <div class="widget-body no-padding">
                <form action="" id="apply-form" class="smart-form" style="padding-left:8px;padding-right:8px;" onsubmit="return saveApply();">
                    <fieldset>
                        <section>
                            <div class="note" style="padding-left:15px;">
                                <div>
                                    填表说明：
                                </div>
                                <div>
                                    1.各类劳务费应由领款本人签收并经课题负责人、经办人签字。
                                </div>
                                <div>
                                    2.现金和转账发放都可使用该表，如通过银行转账发放，请准确填写收款本人的银行账户、开户银行、账户名称等信息。
                                </div>
                                <div>
                                    3.单位填写分类：所内在职职工、所内注册学生、所内劳务流程。客座学生和外单位人员填写具体工作单位。
                                </div>
                            </div>
                        </section>
                        <div class="row">
                            <section class="col col-3">
                                <label class="label">部门</label>
                                <label class="select">
                                    <select id="dept" name="DepartmentName" required="required">

                                        @*<option value="科研处" selected="">科研处</option>
            <option value="财务处">财务处</option>*@
                                    </select> <i></i>
                                </label>
                            </section>
                            <section class="col col-3">
                                <label class="label">报销事由</label>

                                <label class="select">
                                    <select id="refundType" name="RefundType">
                                        @*<option value="劳务" selected="@Model.RefundType">劳务</option>
                                            <option value="报告">报告</option>*@
                                    </select> <i></i>
                                </label>
                            </section>

                            <section class="col col-2">
                                <label class="label">课题负责人</label>
                                <label class="input">
                                    <i class="icon-prepend fa fa-user"></i>
                                    <input type="text" id="projectDirector" name="ProjectDirector" required="required" placeholder="课题负责人" value="@Model.ProjectDirector">
                                </label>
                            </section>
                            <section class="col col-4">
                                <label class="label">课题号</label>
                                @*<label class="input">
                                        <i class="icon-prepend fa fa-info"></i>
                                        <input type="text" id="ProjectNumber" required="required" name="ProjectNumber" placeholder="课题号" value="@Model.ProjectNumber">
                                    </label>*@
                                <label class="select">
                                    <select id="projectNumber" name="ProjectNumber" required="required"></select> <i></i>
                                </label>
                            </section>
                        </div>
                        <div class="row">
                            <section class="col col-3">
                                <label class="label">支付类型</label>
                                <label class="select">
                                    <select id="paymentType" name="PaymentType">
                                        @{ var opt1 = "";
                                         var opt2 = "";
                                         if (@Model.PaymentType != null)
                                         {
                                             if (@Model.PaymentType.Equals("银行转账"))
                                             {
                                                 opt1 = "selected";
                                             }
                                             else
                                             {
                                                 opt2 = "selected";
                                             }
                                         }
                                        }
                                        <option value="银行转账" @opt1>银行转账</option>
                                        <option value="现金支付" @opt2>现金支付</option>
                                    </select> <i></i>
                                </label>
                            </section>
                            <section class="col col-3">
                                <label class="label">合计金额</label>
                                <label class="input">
                                    <i class="icon-prepend fa fa-yen"></i>
                                    <input type="number" id="summation" name="Summation" readonly="readonly" placeholder="" value="@Model.Summation">
                                </label>
                            </section>
                            <section class="col col-2">
                                <label class="label">经办人</label>
                                <label class="input">
                                    <i class="icon-prepend fa fa-user"></i>
                                    <input type="text" id="agent" name="Agent" placeholder="经办人" value="@Model.Agent">
                                </label>
                            </section>
                        </div>
                        <section>
                            <label class="label">关于工作内容、工作时间等的描述(必填)</label>
                            <label class="textarea">
                                <textarea rows="2" name="ApplyDesp" required="required" style="float:left;" placeholder=" 关于工作内容、工作时间等的描述(必填)">@Model.ApplyDesp</textarea>
                            </label>
                        </section>

                    </fieldset>
                    <fieldset>
                        <section>
                            <table id="datatable_create_form" class="table table-striped table-bordered table-hover" width="100%"></table>
                        </section>
                    </fieldset>

                    <footer>
                        <button type="submit" name="submit" class="btn btn-primary">保存</button>
                        <button type="button" class="btn btn-default" onclick="closeFrom();">取消</button>
                        <input type="text" id="serialNumber" name="SerialNumber" placeholder="流水账号" style="visibility:hidden" value="@Model.SerialNumber">
                        <input type="text" id="taskName" name="TaskName" placeholder="课题名称" style="visibility:hidden" value="@Model.TaskName">
                        <input type="text" name="SubmitTime" placeholder="提交时间" style="visibility:hidden" value="@Model.SubmitTime">
                        <input type="text" name="AuditTime" placeholder="审核时间" style="visibility:hidden" value="@Model.AuditTime">
                        <input type="text" name="AuditStatus" placeholder="审核状态" style="visibility:hidden" value="@Model.AuditStatus">
                        <input type="text" name="UserName" placeholder="用户邮箱" style="visibility:hidden" value="@Model.UserName">
                    </footer>
                </form>

            </div>
            <!-- end widget content -->
        </div>

    </div>
    <!-- end widget div -->
    <div id="importDataDialog"></div>
    <div id="dialog-DownloadTemp" title="下载人员导入模板" style="display:none;">
        <p>请根据本申请单选择的支付类型下载相应的模板</p><br />
        <label>人员导入模板1：银行转账</label><a href="@Url.Content("~/Scripts/银行转账模板.xls")">点我下载</a><br /><br />
        <label>人员导入模板2：现金支付</label><a href="@Url.Content("~/Scripts/现金支付模板.xls")">点我下载</a><br />
    </div>

    <!--常用联系人选择对话框-->
    <div id="dialog-ShowContacts" title="请从常用联系人列表选择" style="display:none;">
        <table id="datatable_choose_contacts" class="table table-striped table-bordered table-hover" width="100%"></table>
    </div>
</section>

<link rel="stylesheet" href="@Url.Content("~/Content/css/jAlert-v3.css")">
<script src="@Url.Content("~/Scripts/Custom/App/IdentifyCard.js")"></script>
<script src="@Url.Content("~/Scripts/Custom/App/File.js")"></script>
<script src="@Url.Content("~/Scripts/alert/jAlert-v3.min.js")"></script>
<script src="@Url.Content("~/Scripts/alert/jAlert-functions.min.js")"></script>


<script>
    pageSetUp();
    var table;
    var bankListOpt = [];      //开户银行下拉菜单对应数组
    var titleListOpt = [];        //职称下拉菜单对应数组
    registerBankAccount();     //从数据库读取开户银行下拉菜单对应数组
    registerTitle();                //从数据库读取职称下拉菜单对应数组
    registerRefundType();   //从数据库读取报销事由下拉菜单对应数组
    registerDepartment();   //从数据库读取部门下拉菜单对应数组
    var contactsTable;      //保存联系人选择列表
    var rowDataContacts;
    registerProjectNumber();

    var userName = "@Model.UserName";

    //获取用户信息
    $.ajax({
        type: "GET",
        async: false,
        url: "../Member/User/GetUserByName?userName=" + userName,
        //data: params,
        contentType: "application/json; charset=utf-8",
        datatype: "json",
        success: function (data) {
            //alert(data);
            if (data.TrueName != null) {
                $('#agent').val(data.TrueName);    //经办人默认为用户本人
            }
            if (data.Department != null) {          //获取用户部门设为初始值
                var d = data.Department;
                $("#dept").val(d);
            }
        },
        error: function () {
            toastr.error('获取用户数据失败！');
        }
    });

    //根据输入课题号，提示用户课题名称是否正确
    /*
    $("#ProjectNumber").blur(function () {
        var projectNumber = $('#ProjectNumber').val();
        $.ajax({
            type: "GET",
            async: false,
            url: "../BasicDataManagement/TaskManage/GetDataByID?projectNumber=" + projectNumber,
            //data: params,
            contentType: "application/json; charset=utf-8",
            datatype: "text",
            success: function (data) {
                if (data == "该课题号不存在。") {
                    // alert(data + "请重新填写正确的课题号。", '课题确认');
                    $.jAlert({ //this is the normal usage
                        'title': '课题确认',
                        'content': data + '请重新填写正确的课题号。',
                        'theme': 'black',
                        'size': 'xsm'
                    });
                } else {
                    var taskArray = data.split(",");
                    //  alert('您填写的课题号对应的课题名称为：' + taskArray[0] + ',若有误请重新填写正确的课题号。', '课题确认');
                    $.jAlert({ //this is the normal usage
                        'title': '课题确认',
                        'content': '您填写的课题号对应的课题名称为：' + taskArray[0] + ',若有误请重新填写正确的课题号。',
                        'theme': 'black',
                        'size': 'xsm'
                    });
                    $('#taskName').val(taskArray[0]);
                    $('#projectDirector').val(taskArray[1]);
                }
            },
            error: function () {
                toastr.error('获取课题数据失败！');
            }
        });
    });
    */

    //输入课题负责人，设置课题号下拉列表

    $("#projectNumber").focus(function () {
        getProjectNumber();
    });


    var editor = new $.fn.dataTable.Editor({
        "ajaxUrl": {
            "create": "@Url.Action("CreatePersonal")",
            "edit": "@Url.Action("EditPersonal")",
            "remove": "@Url.Action("DeletePersonal")",
        },
        "table": "#datatable_create_form",
        fields: [
            { name: "Id", label: "编号:", type: "hidden" },
            { name: "SerialNumber", label: "申请单流水号:", type: "hidden" },
            {
                name: "Name",
                label: "姓名:",
                type: "text",
            },
            { name: "Company", label: "单位:", type: "text" },
            {
                name: "CertificateType",
                label: "证件类型:",
                type: "select",
                options: [
                          { label: "居民身份证", value: "居民身份证" },
                          { label: "中国护照", value: "中国护照" },
                          { label: "外国护照", value: "外国护照" },
                          { label: "军官证", value: "军官证" },
                          { label: "士兵证", value: "士兵证" },
                          { label: "武警警官证", value: "武警警官证" },
                          { label: "港澳居民来往内地通行证", value: "港澳居民来往内地通行证" },
                          { label: "台湾居民来往大陆通行证", value: "台湾居民来往大陆通行证" },
                          { label: "香港身份证", value: "香港身份证" },
                          { label: "台湾身份证", value: "台湾身份证" },
                          { label: "澳门身份证", value: "澳门身份证" },
                          { label: "外国人永久居留证", value: "外国人永久居留证" },
                ],
                def: "居民身份证"
            },
            { name: "CertificateID", label: "证件号码:" },
            { name: "Tele", label: "联系电话:", },
            { name: "Nationality", label: "国籍:", type: "text", def: "中国" },
            {
                name: "Title",
                label: "职称:",
                type: "select",
                options: titleListOpt,
            },
            {
                name: "PersonType",
                label: "人员类型:",
                type: "select",
                options: [
                        { label: "所内", value: "所内" },
                        { label: "所外", value: "所外" }
                ],
                def: "所内"
            },
             { name: "Amount", label: "金额(元):", type: "text" },
              {
                  name: "TaxOrNot",
                  label: "是否含税:",
                  type: "radio",
                  options: [
                      { label: "不含税", value: "不含税" },
                      { label: "含税", value: "含税" }
                  ],
                  def: "不含税"
              },
            {
                name: "Bank",
                label: "开户银行:",
                type: "select",
                options: bankListOpt,
                def: "工商银行"
            },
            { name: "AccountNumber", label: "银行账户:", type: "text" },
            { name: "BankDetailName", label: "开户行详细名称:", type: "text", fieldInfo: "<font color='red'>除工商银行外，选择其他银行转账均需填写该项。建议优先选择工商银行转账。</font>" },
            { name: "ProvinceCity", label: "收款账号省市:", type: "text" },
             {
                 name: "PaymentType",
                 label: "支付类型:",
                 type: "text",
                 type: "hidden"
             },
            { name: "Signature", label: "领取人签字:", type: "text", type: "hidden" }
        ]
    });

    //支付类型切换事件
    $("#paymentType").change(function () {
        var paymentType = $('#paymentType').val();
        if (table !== undefined) {
            if (paymentType == "现金支付") {
                editor.field('Bank').hide();
                editor.field('AccountNumber').hide();
                editor.field('BankDetailName').hide();
                editor.field('ProvinceCity').hide();
                $('#datatable_create_form').DataTable().column(11).visible(false);   //开户银行列隐藏
                $('#datatable_create_form').DataTable().column(12).visible(false);  //银行账号列隐藏
                $('#datatable_create_form').DataTable().column(13).visible(false);  //开户行详细名称列隐藏
                $('#datatable_create_form').DataTable().column(14).visible(false);
            } else if (paymentType == "银行转账") {
                editor.field('Bank').show();
                editor.field('AccountNumber').show();
                editor.field('BankDetailName').show();
                editor.field('ProvinceCity').show();
                $('#datatable_create_form').DataTable().column(11).visible(true);
                $('#datatable_create_form').DataTable().column(12).visible(true);
                $('#datatable_create_form').DataTable().column(13).visible(true);
                $('#datatable_create_form').DataTable().column(14).visible(true);
            }
        }

    });
    //初始化创建框显示
    editor.on('onInitCreate', function () {
        //      editor.disable('Amount');
        var paymentType = $('#paymentType').val();
        editor.field('PaymentType').val(paymentType);

        return true;
    });



    //初始化编辑框显示
    editor.on('onInitEdit', function () {
        var CertificateType = editor.field('CertificateType');
        //    editor.disable('Amount');

    });

    //提交前条件判断
    editor.on('preSubmit', function (e, data, action) {
        if (action !== 'remove') {
            var CertificateType = editor.field('CertificateType');
            var CertificateID = editor.field('CertificateID');
            var Amount = editor.field('Amount');
            var PersonType = editor.field('PersonType');
            var personName = editor.field('Name');
            //var PaymentType = editor.field('PaymentType');
            var paymentType = $('#paymentType').val();
            //alert(paymentType);
            var Bank = editor.field('Bank');
            var Company = editor.field('Company');
            var AccountNumber = editor.field('AccountNumber');
            var BankDetailName = editor.field('BankDetailName');
            var nationality = editor.field('Nationality');
            var ProvinceCity = editor.field('ProvinceCity');
            var b_name = Bank.val().trim();
            var bd_name = BankDetailName.val().trim();
            //0.各项必填验证
            if (personName.val().trim() == "") {
                personName.error("请填写人员姓名");
            }
            if (Company.val().trim() == "") {
                Company.error("请填写人员单位");
            }

            if (nationality.val().trim() == "") {
                nationality.error("请填写人员国籍");
            }

            if (CertificateType.val() == "外国护照" && nationality.val().trim() == "中国") {
                nationality.error("请检查国籍信息，外国护照国籍非中国");
            }

            if (Amount.val().trim() == "") {
                Amount.error("请填写金额");
            }

            if (paymentType == "银行转账" && AccountNumber.val().trim() == "") {
                AccountNumber.error("请填写银行账号");
            }

            if (paymentType == "银行转账" && b_name !== "工商银行" && ProvinceCity.val().trim() == "") {
                ProvinceCity.error("请填写收款账号省市");
            }

            //check bankdetailname includes bankname && banddetailname not null
           
            if (b_name !== "工商银行") {
                if (bd_name == "") {
                    BankDetailName.error("请填写开户行详细名称");
                }
                else if (!bd_name.includes(b_name)) {
                    BankDetailName.error("所选银行与开户行详细名称不符，开户行详细名称应包含所选银行名称")
                }
            }
           
            if (b_name == "工商银行" && bd_name !== "") {
                if (!bd_name.includes(b_name)) {
                    BankDetailName.error("所选银行与开户行详细名称不符，工商银行可不填写开户行详细名称")
                }
            }
            

            //1.身份证检查
            if (action === 'edit' && CertificateType.isMultiValue()) {
                toastr.error("只能选取一行编辑");
                return false;
            }

            if (!CertificateID.val()) {
                CertificateID.error('证件号码不能为空');
            }

            if (table !== undefined) {
                var rowData = $('#datatable_create_form').DataTable().rows().data();
                var count = 0;
                $.each($(rowData), function (key, value) {
                    if (value["CertificateID"] === CertificateID.val() && (action === 'create' ||
                        (action === 'edit' && count > 0))) {
                        count++;
                        CertificateID.error('该申请单中已经存在相同的人员信息，请修改后重新提交!');
                        return;
                    }
                });
            }

            if (CertificateType.val() === '居民身份证') {
                var Validator = new IDValidator();
                if (!Validator.isValid(CertificateID.val().trim())) {
                    isIDCard1 = /^[1-9]\d{7}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}$|^[1-9]\d{5}[1-9]\d{3}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}([0-9]|X)$/;
                    var checkagain = isIDCard1.test(CertificateID.val());
                    if (checkagain != true) {
                        CertificateID.error('身份证号码不正确');
                    }
                    var c_id = CertificateID.val().trim();
                    if ("0000" === c_id.substr(c_id.length - 4)) {
                        CertificateID.error('身份证号码不正确，请检查后四位');
                    }
                }
            }

            //2.金额为数值的验证
            //如果不是数值
            if (isNaN(new Number(Amount.val()))) {
                Amount.error("金额格式错误，请填写数值型");
            }

            //3.所内人员验证，若证件ID不存在于基本数据表，则必须选择所外
            $.ajax({
                type: "GET",
                async: false,
                url: "../BasicDataManagement/WageBaseTable/GetNameByCerID?certificateID=" + CertificateID.val(),
                //data: params,
                contentType: "application/json; charset=utf-8",
                datatype: "text",
                success: function (data) {
                    var nameArray = data.split(",");
                    if (nameArray[1] == "upper") {
                        CertificateID.error("该证件号码中的字母需从小写修改为大写！");
                    } else if (nameArray[1] == "lower") {
                        CertificateID.error("该证件号码中的字母需从大写修改为小写！");
                    }

                    if (nameArray[0] == "") {
                        if (PersonType.val() == "所内") {
                            PersonType.error("该人员不是所内人员，需要选择所外");
                        }
                    }
                    else {
                        var fillName = personName.val().trim();
                                       
                        if (nameArray[0] != fillName.replace("\n", "").replace("\t", "").replace("\r", "") && PersonType.val() == "所内") {
                            CertificateID.error('该证件号码与人员不符，请检查');
                        } else {
                            if (PersonType.val() == "所外") {
                                PersonType.error("该人员是所内人员，需要选择所内");
                            }
                        }
                    }
                },
                error: function () {
                    toastr.error('获取人员信息数据失败！');
                }
            });

            //4.验证现金支付是否大于3次
            /*
            if (paymentType == "现金支付") {
                $.ajax({
                    type: "GET",
                    async: false,
                    url: "../App/ApplyForm/GetCashCount?certificateID=" + CertificateID.val(),
                    //data: params,
                    contentType: "application/json; charset=utf-8",
                    datatype: "text",
                    success: function (data) {
                        if (data != "") {
                            Amount.error(data);
                        }
                    },
                    error: function () {
                        toastr.error('获取支付类型统计数据失败！');
                    }
                });
            }
            */

            //银行卡号验证
            if (paymentType === "银行转账") {
                var regex1 = /^(\d{4}[\s\-]?){4,5}\d{3}$/g;
                var regex2 = /^(\d{16}|\d{17}|\d{18}|\d{19}|\d{20}|\d{21})$/;
                var str1 = AccountNumber.val();
                var arr1 = regex1.test(str1);
                //alert(arr);
                if (arr1 !== true) {
                    if (regex2.test(str1) !== true) {
                        AccountNumber.error("银行卡号有误，请检查！");
                    }
                }
                var p_id = AccountNumber.val().trim();
                if ("000" === p_id.substr(p_id.length - 3)) {
                    AccountNumber.error('银行卡号有误，请检查后三位');
                }
            }

            //手机号码验证
            var Tele = editor.field('Tele');
            var regMobile = /^1[34578]\d{9}$/;    //手机验证
            var regPhone = /^0\d{2,3}-?\d{7,8}$/;///^(\(\d{3,4}\)|\d{3,4}-|\s)?\d{7,14}$/;     //座机验证
            var str2 = Tele.val();
            var arr2 = regMobile.test(str2);
            var arr3 = regPhone.test(str2);
            //alert(arr);
            if (arr2 !== true && arr3 !== true) {
                Tele.error("联系电话有误，请检查！若为座机请填写区号，如01082306380");
            }


            // 如果有错误报告，不能提交编辑结果
            if (this.inError()) {
                return false;
            }

            if (action === 'create') {
                //var sumBefore = $('#summation').val();
                //$('#summation').val(new Number(sumBefore) + new Number(Amount.val()));
                data.data[0].SerialNumber = "@Model.SerialNumber";

                return true;
            }
            if (action === 'edit') {
                //合计金额需更新
                //var sumBefore = $('#summation').val();
                //var amountBefore = $('#datatable_create_form').DataTable().rows('.selected').data()[0].Amount;
                //$('#summation').val(new Number(sumBefore) - new Number(amountBefore) + new Number(Amount.val()));

            }
        } else if (action === 'remove') {
            //合计金额需减去
            //var sumBefore = $('#summation').val();
            //var sum = new Number(sumBefore);
            //if (sumBefore >= 0) {
            //    var selectRow = $('#datatable_create_form').DataTable().rows('.selected').data();
            //    for (var i = 0 ; i < selectRow.length; i++) {
            //        sum -= new Number(selectRow[i].Amount);
            //    }
            //    $('#summation').val(sum);
            //}
        }

    });



    function initTable() {

        var buttons = [
            {
                text: "新增", extend: "create", editor: editor
            },
            {
                text: "修改", extend: "edit", editor: editor
            },
            {
                text: "删除", extend: "remove", editor: editor
            },
            {
                text: "导出", extend: 'excel', exportOptions: {
                    columns: ':visible'
                },
                title: '人员信息表',
            },
             {
                 text: "下载导入模板", action: function (e, dt, node, config) {
                     $("#dialog-DownloadTemp").css("display", "block");
                     $("#dialog-DownloadTemp").dialog("open");
                 }

             },
            {
                text: "导入", action: function (e, dt, node, config) {
                    var ColumnDatas = [];
                    var ParameterDatas = [];
                    ParameterDatas.push({ Key: 'serialNumber', Value: $('#serialNumber').val() });
                    ParameterDatas.push({ Key: 'paymentType', Value: $('#paymentType').val() });
                    //var columns = dt.settings().init().columns;
                    //dt.columns().every(function (index) {
                    //    ColumnDatas.push({ ColumnName: columns[index].data, TitleName: columns[index].title })
                    //})
                    //$.session.set("serNum", $('#serialNumber').val());
                    //$.session.set("payType", $('#paymentType').val());

                    if ($('#paymentType').val() === "现金支付") {
                        ColumnDatas.push({ ColumnName: 'Id', TitleName: '编号' });
                        ColumnDatas.push({ ColumnName: 'Name', TitleName: '姓名' });
                        ColumnDatas.push({ ColumnName: 'CertificateType', TitleName: '证件类型' });
                        ColumnDatas.push({ ColumnName: 'CertificateID', TitleName: '证件号码' });
                        ColumnDatas.push({ ColumnName: 'Company', TitleName: '单位' });
                        ColumnDatas.push({ ColumnName: 'Tele', TitleName: '联系电话' });
                        ColumnDatas.push({ ColumnName: 'PersonType', TitleName: '人员类型' });
                        ColumnDatas.push({ ColumnName: 'Nationality', TitleName: '国籍' });
                        ColumnDatas.push({ ColumnName: 'Title', TitleName: '职称' });
                        ColumnDatas.push({ ColumnName: 'TaxOrNot', TitleName: '是否含税' });
                        ColumnDatas.push({ ColumnName: 'Amount', TitleName: '金额(元)' });
                    } else if ($('#paymentType').val() === "银行转账") {
                        ColumnDatas.push({ ColumnName: 'Id', TitleName: '编号' });
                        ColumnDatas.push({ ColumnName: 'Name', TitleName: '姓名' });
                        ColumnDatas.push({ ColumnName: 'CertificateType', TitleName: '证件类型' });
                        ColumnDatas.push({ ColumnName: 'CertificateID', TitleName: '证件号码' });
                        ColumnDatas.push({ ColumnName: 'Company', TitleName: '单位' });
                        ColumnDatas.push({ ColumnName: 'Tele', TitleName: '联系电话' });
                        ColumnDatas.push({ ColumnName: 'PersonType', TitleName: '人员类型' });
                        ColumnDatas.push({ ColumnName: 'Nationality', TitleName: '国籍' });
                        ColumnDatas.push({ ColumnName: 'Title', TitleName: '职称' });
                        ColumnDatas.push({ ColumnName: 'TaxOrNot', TitleName: '是否含税' });
                        ColumnDatas.push({ ColumnName: 'Amount', TitleName: '金额(元)' });
                        ColumnDatas.push({ ColumnName: 'Bank', TitleName: '开户银行' });
                        ColumnDatas.push({ ColumnName: 'AccountNumber', TitleName: '银行账号' });
                        ColumnDatas.push({ ColumnName: 'BankDetailName', TitleName: '开户行详细名称' });
                        ColumnDatas.push({ ColumnName: 'ProvinceCity', TitleName: '收款账号省市' });
                    }

                    $.ajax({
                        url: '../App/Import/ImportData',
                        type: 'POST',
                        data: JSON.stringify({ ActionUrl: "@Url.Action("ImportPersonal")", Columns: ColumnDatas, Parameters: ParameterDatas }),
                        contentType: 'application/json; charset=utf8',
                        cache: false,
                        dataType: 'html',
                        success: function (data) {
                            $('#importDataDialog').html(data);
                            dt.ajax.reload();
                        },
                        error: function (xhr) {
                            alert("出现错误，请稍后再试:" + xhr.responseText);
                            toastr.error("导入失败");
                        }
                    });

                }

            },
            {
                text: "刷新",
                action: function (e, dt, node, config) {
                    dt.ajax.reload();
                }
            }
        ];

        table = $('#datatable_create_form').dataTable({
            dom: 'Bfrtip',
            colReorder: true,
            ajax: {
                url: '@Url.Action("GetPersonalData")',
                type: "POST",
                data: { "serialNumber": "@Model.SerialNumber" }
            },
            searching: true,
            ordering: true,
            select: true,
            info: true,
            paginate: false,    //是否显示（应用）分页器
            sort: true,         //是否启动各个字段的排序功能
            stateSave: false,
            stateDuration: 60 * 60 * 12,
            scrollX: true,
            autoWidth: true,
            bProcessing: true,
            paging: false,
            "sScrollY": "100%",
            "sScrollX": "100%",
            "sScrollXInner": "100%",
            buttons: buttons,
            columns: [
                //{ data: "SerialNumber", title: "申请单流水号", visible: false },
                { data: "Id", title: "编号", visible: false },
                { data: "Name", title: "姓名" },
                { data: "CertificateType", title: "证件类型" },
                { data: "CertificateID", title: "证件号码" },
                { data: "Company", title: "单位" },
                { data: "Tele", title: "联系电话" },
                { data: "PersonType", title: "人员类型" },
                { data: "Nationality", title: "国籍" },
                { data: "Title", title: "职称" },
                { data: "TaxOrNot", title: "是否含税" },
                { data: "Amount", title: "金额(元)" },
                { data: "Bank", title: "开户银行" },
                { data: "AccountNumber", title: "银行账号" },
                { data: "BankDetailName", title: "开户行详细名称" },
                { data: "ProvinceCity", title: "收款账号省市" },
                { data: "AccountName", title: "账户名称", visible: false },
                { data: "PaymentType", title: "支付类型", visible: false },
                { data: "Signature", title: "领取人签字", visible: false }

            ],
            "footerCallback": function (row, data, start, end, display) {
                var api = this.api(), data;

                // Total over all pages
                total = api
                    .column(10)
                    .data()
                    .reduce(function (a, b) {
                        return a + b;
                    }, 0);

                // Update summation
                $('#summation').val(total);
            },

            oLanguage: {
                "sLengthMenu": "每页显示 _MENU_ 条记录",
                "sZeroRecords": "抱歉， 没有找到",
                "sInfo": "显示 _START_ 到 _END_ 条记录，总共 _TOTAL_ 条记录",
                "sInfoEmpty": "没有数据",
                "sInfoFiltered": "(从 _MAX_ 条数据中检索)",
                "sSearch": "搜索名称:",
                "sSelected": "选中 _TOTAL_ 条记录",
                "sLoadingRecords": "载入中...",
                "oPaginate": {
                    "sFirst": "首页",
                    "sPrevious": "前一页",
                    "sNext": "后一页",
                    "sLast": "尾页"
                }
            }
        });

        var buttons_contancts = [];
        contactsTable = $('#datatable_choose_contacts').dataTable({
            dom: 'Bfrtip',
            colReorder: true,
            searching: false,
            ordering: true,
            select: true,
            info: true,
            paginate: false,    //是否显示（应用）分页器
            sort: false,         //是否启动各个字段的排序功能
            //stateSave: false,
            //stateDuration: 60 * 60 * 12,
            scrollX: true,
            autoWidth: true,
            bProcessing: true,
            paging: false,
            "sScrollY": "100%",
            "sScrollX": "150%",
            "sScrollXInner": "150%",
            buttons: [
            {
                text: "确定选择该行信息", action: function (e, dt, node, config) {
                    var rowData = dt.rows({ selected: true }).data();
                    var paymentType = $('#paymentType').val();
                    $.each($(rowData), function (key, value) {
                        //alert(value["CertificateID"]);
                        editor.field('CertificateID').val(value["CertificateID"]);
                        editor.field('CertificateType').val(value["CertificateType"]);
                        editor.field('PersonType').val(value["PersonType"]);
                        editor.field('Tele').val(value["Tele"]);
                        editor.field('Company').val(value["Company"]);
                        editor.field('Nationality').val(value["Nationality"]);
                        editor.field('Title').val(value["Title"]);
                        if (paymentType == "银行转账") {
                            editor.field('Bank').val(value["Bank"]);
                            editor.field('BankDetailName').val(value["BankDetailName"]);
                            editor.field('AccountNumber').val(value["AccountNumber"]);
                            editor.field('ProvinceCity').val(value["ProvinceCity"]);
                        }
                    });
                    $("#dialog-ShowContacts").dialog("close");
                }
            },
              {
                  text: "取消", action: function (e, dt, node, config) {

                      $("#dialog-ShowContacts").dialog("close");
                  }
              }],
            columns: [
                 //{
                 //    data: null,
                 //    defaultContent: '',
                 //    className: 'select-checkbox',
                 //    orderable: false
                 //},
                { data: "Name", title: "姓名" },
                { data: "CertificateType", title: "证件类型" },
                { data: "CertificateID", title: "证件号码" },
                { data: "Company", title: "单位" },
                { data: "Tele", title: "联系电话" },
                { data: "PersonType", title: "人员类型" },
                { data: "Nationality", title: "国籍" },
                { data: "Title", title: "职称" },
                { data: "Bank", title: "开户银行" },
                { data: "AccountNumber", title: "银行账号" },
                { data: "BankDetailName", title: "开户行详细名称" },
                { data: "ProvinceCity", title: "收款账号省市" },
            ],
            //select: {
            //    style: 'os',
            //    selector: 'td:first-child'
            //},
            select: {
                style: 'single'
            },
            oLanguage: {
                "sLengthMenu": "每页显示 _MENU_ 条记录",
                "sZeroRecords": "抱歉， 没有找到",
                "sInfo": "显示 _START_ 到 _END_ 条记录，总共 _TOTAL_ 条记录",
                "sInfoEmpty": "没有数据",
                "sInfoFiltered": "(从 _MAX_ 条数据中检索)",
                "sZeroRecords": "没有检索到数据",
                "sSearch": "搜索名称:",
                "sSelected": "选中 _TOTAL_ 条记录",
                "oPaginate": {
                    "sFirst": "首页",
                    "sPrevious": "前一页",
                    "sNext": "后一页",
                    "sLast": "尾页"
                }
            }
        });

    }

    initTable();

    registerPaymentType();    //维护编辑状态的editor和table列的显示

    function closeFrom() {
        if ($("#widget-grid")[0]) {
            $("#widget-grid").jarvisWidgets("destroy");
            $("#widget-grid").remove();
        }

        if ($(".content-wrapper")[0]) {
            $(".content-wrapper").show()
        }
    }

    function saveApply() {
        $.ajax({
            type: "POST",
            url: "@Url.Action("Save")",
            data: $('#apply-form').serialize(),
            success: function (result) {
                //保存列表信息
                var rows = $('#datatable_create_form').DataTable().rows();
                if (rows.count() > 1) {
                    $('#datatable_tabletools').DataTable().ajax.reload();
                    closeFrom();
                    return;
                }

                var rowDatas = rows.data();
                var queryDatas = [];
                $.each($(rowDatas), function (key, value) {
                    queryDatas.push(value);
                });
                //var datas = table.rows().data();
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("InsertOrUpdatePersonal")",
                    data: JSON.stringify(queryDatas),
                    contentType: "application/json",
                    success: function (result) {
                        $('#datatable_tabletools').DataTable().ajax.reload();
                        closeFrom();
                    }
                })
            },
            error: function (data) {
                toastr.error(data.responseText);
            }
        });
        return false;
    }

    function registerBankAccount() {
        $.ajax({
            type: "GET",
            async: false,
            url: "../BasicDataManagement/BankAccount/GetAllData",
            //data: params,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $.each(data.data, function (k, v) {
                    bankListOpt.push({ label: v.BankName, value: v.BankName });
                })
            },
            error: function () {
                toastr.error('获取开户银行数据失败！');
            }
        });
    }

    function registerTitle() {
        $.ajax({
            type: "GET",
            async: false,
            url: "../BasicDataManagement/Professional/GetAllData",
            //data: params,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $.each(data.data, function (k, v) {
                    titleListOpt.push({ label: v.TitleName, value: v.TitleName });
                })
            },
            error: function () {
                toastr.error('获取职称数据失败！');
            }
        });
    }
    function registerRefundType() {
        $.ajax({
            type: "GET",
            async: false,
            url: "../BasicDataManagement/Reimbursement/GetAllData",
            //data: params,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $('#refundType').html("");
                $.each(data.data, function (k, v) {
                    $("#refundType").append("<option>" + v.RefundTypeName + "</option>");
                })
                if ('@Model.RefundType' != "")
                    $("#refundType").find("option:contains('@Model.RefundType')").attr("selected", true);
            },
            error: function () {
                toastr.error('获取报销事由数据失败！');
            }
        });
    }

    function registerPaymentType() {
        var pType = "@Model.PaymentType";
        if (pType !== null) {
            if (pType == "现金支付") {
                editor.field('Bank').hide();
                editor.field('AccountNumber').hide();
                editor.field('BankDetailName').hide();
                editor.field('ProvinceCity').hide();
                $('#datatable_create_form').DataTable().column(11).visible(false);   //开户银行列隐藏
                $('#datatable_create_form').DataTable().column(12).visible(false);  //银行账号列隐藏
                $('#datatable_create_form').DataTable().column(13).visible(false);  //开户行详细名称列隐藏
                $('#datatable_create_form').DataTable().column(14).visible(false);
            } else if (pType == "银行转账") {
                editor.field('Bank').show();
                editor.field('AccountNumber').show();
                editor.field('BankDetailName').show();
                editor.field('ProvinceCity').show();
                $('#datatable_create_form').DataTable().column(11).visible(true);
                $('#datatable_create_form').DataTable().column(12).visible(true);
                $('#datatable_create_form').DataTable().column(13).visible(true);
                $('#datatable_create_form').DataTable().column(14).visible(true);
            }
        } else {
            editor.field('Bank').show();
            editor.field('AccountNumber').show();
            editor.field('BankDetailName').show();
            $('#datatable_create_form').DataTable().column(11).visible(true);
            $('#datatable_create_form').DataTable().column(12).visible(true);
            $('#datatable_create_form').DataTable().column(13).visible(true);
        }
    }

    function registerDepartment() {
        $.ajax({
            type: "GET",
            async: false,
            url: "../BasicDataManagement/Department/GetAllData",
            //data: params,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $("#dept").html("");
                $.each(data.data, function (k, v) {
                    $("#dept").append("<option>" + v.DepartmentName + "</option>");
                })
                if ('@Model.DepartmentName' != "")
                    $("#dept").find("option:contains('@Model.DepartmentName')").attr("selected", true);
            },
            error: function () {
                toastr.error('获取部门数据失败！');
            }
        });
    }
    //初始化与编辑显示projectNumber
    function registerProjectNumber() {
        var projectDirector = $('#projectDirector').val();
        if ('@Model.ProjectNumber' != "") {
            if (projectDirector != "") {
                $.ajax({
                    type: "GET",
                    async: false,
                    url: "../BasicDataManagement/TaskManage/GetTaskByTaskLeader?taskLeader=" + projectDirector,
                    //data: params,
                    contentType: "application/json; charset=utf-8",
                    datatype: "json",
                    success: function (data) {
                        $("#projectNumber").html("");
                        if (data.total == 0) {
                            $("#projectNumber").append("<option>" + " 无 " + "</option>");

                        }
                        $.each(data.data, function (k, v) {
                            $("#projectNumber").append("<option>" + v.TaskID + " | " + v.TaskName + "</option>");
                        })

                        if ('@Model.ProjectNumber' != "无")
                            $("#projectNumber").find("option:contains('@Model.ProjectNumber')").attr("selected", true);
                    },
                    error: function () {
                        toastr.error('获取课题数据失败！');
                    }
                });
            }
        }
    }

    function getProjectNumber() {
        var projectDirector = $('#projectDirector').val();
        if (projectDirector == "") {
            alert("请先输入课题负责人姓名，再点击课题号列表，系统会自动获取该负责人的课题编号列表。");
            return;
        }
        $.ajax({
            type: "GET",
            async: false,
            url: "../BasicDataManagement/TaskManage/GetTaskByTaskLeader?taskLeader=" + projectDirector,
            //data: params,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $("#projectNumber").html("");
                if (data.total == 0) {
                    $("#projectNumber").append("<option>" + " 无 " + "</option>");
                    $.jAlert({ //this is the normal usage
                        'title': '课题确认',
                        'content': projectDirector + '名下暂无课题，请检查课题负责人姓名填写是否正确。',
                        'theme': 'black',
                        'size': 'xsm',
                        'options': 'confirm'
                    });
                }
                $.each(data.data, function (k, v) {
                    $("#projectNumber").append("<option>" + v.TaskID + " | " + v.TaskName + "</option>");
                })

                if ('@Model.ProjectNumber' != "无")
                    $("#projectNumber").find("option:contains('@Model.ProjectNumber')").attr("selected", true);
            },
            error: function () {
                toastr.error('获取课题数据失败！');
            }
        });
    }

    //人员导入模板下载
    $("#dialog-DownloadTemp").dialog({
        autoOpen: false,
        height: 320,
        width: 400,
        modal: true,
        buttons: {
            "关闭": function () {
                $(this).dialog("close");
            }
        }
    });

    $('input', editor.field('Name').node()).on('blur', function () {
        var input_name = editor.field('Name').val();
        nameBlur(input_name);
    });


    //根据输入姓名，显示常用联系人信息
    function nameBlur(input_name) {
        var paymentType = $('#paymentType').val();
        $.ajax({
            type: "GET",
            async: false,
            url: "../App/TopContacts/GetContactsByName?name=" + input_name,
            //data: params,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                if (data.total == 1) {
                    //若该姓名仅一个常用联系人，则将数据直接回显到各个控件
                    $.each(data.data, function (k, v) {
                        if (v.CertificateID != null) {
                            editor.field('CertificateID').val(v.CertificateID);
                        }
                        if (v.CertificateType != null) {
                            editor.field('CertificateType').val(v.CertificateType);
                        }
                        if (v.PersonType != null) {
                            editor.field('PersonType').val(v.PersonType);
                        }
                        if (v.Tele != null) {
                            editor.field('Tele').val(v.Tele);
                        }
                        if (v.Company != null) {
                            editor.field('Company').val(v.Company);
                        }
                        if (v.Nationality != null) {
                            editor.field('Nationality').val(v.Nationality);
                        }
                        if (v.Title != null) {
                            editor.field('Title').val(v.Title);
                        }

                        if (paymentType == "银行转账") {
                            if (v.Bank != null) {
                                editor.field('Bank').val(v.Bank);
                            }
                            if (v.BankDetailName != null) {
                                editor.field('BankDetailName').val(v.BankDetailName);
                            }
                            if (v.AccountNumber != null) {
                                editor.field('AccountNumber').val(v.AccountNumber);
                            }
                            if (v.ProvinceCity != null) {
                                editor.field('ProvinceCity').val(v.ProvinceCity);
                            }
                        }
                    })
                } else if (data.total > 1) {
                    //若该姓名存在多个常用联系人，则打开联系人选择列表对话框

                    $("#dialog-ShowContacts").css("display", "block");
                    $("#dialog-ShowContacts").dialog("open");
                    reloadContactsTable(data);

                }
            },
            error: function () {
                toastr.error('获取常用领款人信息失败！');
            }
        });
    }
    $("#dialog-ShowContacts").dialog({
        autoOpen: false,
        height: 320,
        width: 700,
        modal: true,
        //buttons: {
        //    "确定": function () {


        //        $(this).dialog("close");
        //    },
        //    "取消": function () {
        //        $(this).dialog("close");
        //    }
        //}
    });

    function reloadContactsTable(data) {
        //pageSetUp();
        //更新数据
        //if ($.fn.dataTable.isDataTable('#datatable_choose_contacts')) {
        var oSettings = contactsTable.fnSettings();
        contactsTable.fnClearTable(this);
        for (var i = 0; i < data.total; i++) {
            contactsTable.oApi._fnAddData(oSettings, data.data[i]);
        }
        //  oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();
        //$.fn.dataTable.tables({ visible: true, api: true }).columns.adjust();
        contactsTable.fnDraw();
        //return;
        // }

    }
</script>
