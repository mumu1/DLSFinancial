@using BEYON.Domain.Model.App

<div id="content" style="overflow-y: auto; height: 100%; opacity: 1;">
    <div class="content-wrapper">
        @*<header role="heading">
            <h2>初始化工资字典表维护</h2>
        </header>*@
        <!-- widget div-->

        <div class="jarviswidget jarviswidget-color-darken jarviswidget-sortable" id="wid-id-0" data-widget-editbutton="false" role="widget">
            <!-- widget options:
            usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

            data-widget-colorbutton="false"
            data-widget-editbutton="false"
            data-widget-togglebutton="false"
            data-widget-deletebutton="false"
            data-widget-fullscreenbutton="false"
            data-widget-custombutton="false"
            data-widget-collapsed="true"
            data-widget-sortable="false"

            -->
            <!-- widget div-->
            <div>

                <!-- widget edit box -->
                <div class="jarviswidget-editbox">
                    <!-- This area used as dropdown edit box -->

                </div>
                <!-- end widget edit box -->
                <!-- widget content -->
                <div class="widget-body">
                    <table id="datatable_tabletools" class="table table-striped table-bordered table-hover" width="100%"></table>
                </div>
                <!-- end widget content -->

            </div>
            <!-- end widget div -->
        </div>
        <!-- end widget -->
    </div>

    <div id="importDataDialog"></div>
    <!--确认备份本月算税记录对话框-->
    <div id="confirmDialog_backupTax" title="确认备份本月算税记录" style="display:none;">
        备份计税数据后本月算税记录会被清空，当前的算税记录会全部转存到历史算税记录中，该操作应该在当月初始化工资表导入前进行。您确定要备份计税数据吗？
    </div>​
    <!--确认当月数据汇入年度累计表对话框-->
    <div id="confirmDialog_AddYearTable" title="确认将当月数据汇入年度累计表" style="display:none;">
        将当月汇总数据汇入当年累计数据，从1月开始累计。该操作应该在备份本月算税记录前进行。您确定要汇总累计数据吗？
    </div>​
    <!--确认清空初始化工资表对话框-->
    <div id="confirmDialog_clearVageBase" title="确认清空当前基础工资表" style="display:none;">
        点击确认后初始化基础工资表（即下表）记录会被清空，该操作应该在当月初始化工资表导入前进行。您确定要清空基础工资表吗？
    </div>​
    <!--更新系统开放时间对话框-->
    <div id="dialog-setSafeguardTime" title="更新系统开放时间" style="display:none;">
        <p class="validateTips">请设置系统本月的普通用户开放时间，结束时间需晚于开始时间。</p>
        <form>
            <fieldset>
                <div>
                    <label class="control-labe" id="recentSafeguardTime">当前系统开放时间区间：</label>
                </div>
                    <div id="starttime_main" class="control-group">
                        <label class="control-label" for="starttime">开始时间：</label>
                        <div class="date form_datetime controls" data-date="2013-05-10" id="starttimeDiv">
                            <input type="text" class="span9" value="" id="starttime" readonly>
                            <span class="add-on">
                                <i class="icon-calendar"></i>
                            </span>
                        </div>
                    </div>
                    <div id="endtime_main" class="control-group">
                        <label class="control-label" for="endtime">结束时间：</label>
                        <div class=" controls date form_datetime"
                             data-date="2013-05-10" id="endtimeDiv">
                            <input type="text" class="span9" value="" id="endtime"
                                   readonly> <span class="add-on">
                                <i class="icon-calendar"></i>
                            </span>
                        </div>
                    </div>
</fieldset>
        </form>
    </div>
</div>

<link rel="stylesheet" href="@Url.Content("~/Content/css/jAlert-v3.css")">
<script src="@Url.Content("~/Scripts/alert/jAlert-v3.min.js")"></script>
<script src="@Url.Content("~/Scripts/alert/jAlert-functions.min.js")"></script>

<script type="text/javascript">
    $(document).ready(function () {
        loadTableData();

    });

   
    $("#dialog-setSafeguardTime").dialog({
        autoOpen: false,
        height: 320,
        width: 400,
        modal: true,
        buttons: {
            "更新": function () {
               // var bValid = true;
                var startTime = $('#starttime').val();
                var endTime = $('#endtime').val();
                if (startTime > endTime) {
                    $.jAlert({ //this is the normal usage
                        'title': '起止日期范围有误',
                        'content': '结束日期小于开始日期！请重新填写正确的起止日期范围。',
                        'theme': 'black',
                        'size': 'xsm'
                    });
                    return;
                }
                var times = startTime + "," + endTime;
                    $.ajax({
                        type: "POST",
                        async: false,
                        url: "../BasicDataManagement/WageBaseTable/UpdateSafeguardTime?times=" + times,
                        //data: JSON.stringify(params),
                        contentType: "application/json; charset=utf-8",
                        datatype: "json",
                        success: function (data) {
                            toastr.info('更新开放时间成功！');
                        },
                        error: function () {
                            toastr.error('更新开放时间失败！');
                        }
                    });                
                    $(this).dialog("close");

            },
            Cancel: function () {
                $(this).dialog("close");
            }
        }

    });

    //加载列表
    function loadTableData() {
        $.ajax({
            type: "GET",
            url: "../BasicDataManagement/WageBaseTable/GetAllData",
            //data: params,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                initTable(data);
            },
            error: function () {
                toastr.error('获取初始工资数据失败！');
            }
        });
    }

    function initTable(data) {
        pageSetUp();
        //更新数据
        if ($.fn.dataTable.isDataTable('#datatable_tabletools')) {
            var oSettings = table.fnSettings();
            table.fnClearTable(this);
            for (var i = 0; i < data.rows.length; i++) {
                table.oApi._fnAddData(oSettings, data.rows[i]);
            }

            oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();
            table.fnDraw();
            return;
        }

        var editor = new $.fn.dataTable.Editor({
            "ajaxUrl": {
                "create": "@Url.Action("Create")",
                "edit": "@Url.Action("Edit")",
                "remove": "@Url.Action("Delete")"
            },
            "table": "#datatable_tabletools",
            fields: [
            {
                label: "期间:",
                name: "Period"
            },
            {
                label: "姓名",
                name: "Name"
            }, {
                label: "证件类型:",
                name: "CertificateType"
            },
            {
                label: "证件号码:",
                name: "CertificateID"
            },
            {
                label: "初始应发数:",
                name: "InitialEaring"
            },
            {
                label: "免税额:",
                name: "TaxFree"
            },
            {
                label: "基本扣除:",
                name: "AmountDeducted"
            },
            {
                label: "初始应纳税所得额:",
                name: "InitialTaxPayable"
            },
             {
                 label: "初始税额:",
                 name: "InitialTax"
             },
              {
                  label: "专项扣除额:",
                  name: "SpecialDeduction"
              }
            ]
        });


        table = $('#datatable_tabletools').dataTable({
            dom: 'Bfrtip',
            ajax: '@Url.Action("GetAllData")',
            buttons: [
                {
                    text: "新增", extend: "create", editor: editor
                },
                {
                    text: "修改", extend: "edit", editor: editor
                },
                { text: "删除", extend: "remove", editor: editor },
                {
                    extend: 'collection',
                    text: '导出',
                    buttons: [
                      //  { text: "拷贝", extend: 'copy' },
                        { text: "EXCEL表格", extend: 'excel' },
                      //  { text: "CSV表格", extend: 'csv' },
                       // { text: "PDF文档", extend: 'pdf' },
                    //    { text: "打印", extend: 'print' }
                    ]
                },
                 {
                     text: "6刷新",
                     action: function (e, dt, node, config) {
                         dt.ajax.reload();
                     }
                 },
                {
                    text: "5导入",
                    action: function (e, dt, node, config) {
                        alert("若为当月初始化整表导入，请先执行清空，再导入。");
                        var ColumnDatas = [];
                        var columns = dt.settings().init().columns;
                        dt.columns().every(function (index) {
                            ColumnDatas.push({ ColumnName: columns[index].data, TitleName: columns[index].title })
                        })

                        $.ajax({
                            url: '../App/Import/ImportData',
                            type: 'POST',
                            data: JSON.stringify({ ActionUrl: "@Url.Action("Import")", Columns: ColumnDatas }),
                            contentType: 'application/json; charset=utf8',
                            cache: false,
                            dataType: 'html',
                            success: function (data) {
                                $('#importDataDialog').html(data);
                                

                            },
                            error: function (xhr) {
                                alert("出现错误，请稍后再试:" + xhr.responseText);
                            }
                        });
                        dt.ajax.reload();
                        //$('#importDataDialog').load('../App/Import/ImportData', );
                    }
                },              
                {
                    text: "4清空",
                    action: function (e, dt, node, config) {
                        clearWageBase(dt);
                        //$("#confirmDialog_clearVageBase").dialog("open");
                        //e.preventDefault();
                        //dt.ajax.reload();
                                               
                    }
                },
                {
                    text: "3备份计税数据",
                    action: function (e, dt, node, config) {
                        $("#confirmDialog_backupTax").dialog("open");
                           
                    }
                },
                   {
                       text: "2当月数据汇入年度累计表",
                       action: function (e, dt, node, config) {
                           $("#confirmDialog_AddYearTable").dialog("open");

                       }
                   },
                 {
                     text: "1更新开放时间",
                     action: function (e, dt, node, config) {
                         openSafeguardTimeDialog();                       
                     }
                 },
            ],
            searching: true,
            ordering: true,
            select: true,
            info: true,
            paginate: true, //是否显示（应用）分页器
            sort: true, //是否启动各个字段的排序功能
            stateSave: false,
            stateDuration: 60 * 60 * 12,
            iDisplayLength: 15,
            autoWidth: true,
            bProcessing: true,
            paging: true,
            columns: [
                                    { data: "Id", title: "编号" },
                                    { data: "Period", title: "期间" },
                                    { data: "Name", title: "姓名" },
                                    { data: "CertificateType", title: "证件类型" },
                                    { data: "CertificateID", title: "证件号码" },
                                    { data: "InitialEaring", title: "初始应发数" },
                                    { data: "TaxFree", title: "免税额" },
                                    { data: "AmountDeducted", title: "基本扣除" },
                                    { data: "InitialTaxPayable", title: "初始应纳税所得额" },
                                    { data: "InitialTax", title: "初始税额" },
                                    { data: "SpecialDeduction", title: "专项扣除额" },
                                   // { data: "PersonType", title: "人员类型" },
                                    //{ data: "Title", title: "职称" }
            ],
            oLanguage: {
                "sLengthMenu": "每页显示 _MENU_ 条记录",
                "sZeroRecords": "抱歉， 没有找到",
                "sInfo": "显示 _START_ 到 _END_ 条记录，总共 _TOTAL_ 条记录",
                "sInfoEmpty": "没有数据",
                "sInfoFiltered": "(从 _MAX_ 条数据中检索)",
                "sZeroRecords": "没有检索到数据",
                "sSearch": "搜索名称:",
                "sSelected": "选中 _TOTAL_ 条记录",
                "oPaginate": {
                    "sFirst": "首页",
                    "sPrevious": "前一页",
                    "sNext": "后一页",
                    "sLast": "尾页"
                }

            }
        });
    }

    var start, end;

    $('#starttime').datepicker({
        format: 'yyyy-mm-dd',
        weekStart: 1,
        autoclose: true,
        todayBtn: 'linked',
        language: 'zh-CN'
    }).on('changeDate', function (ev) {
        var startTime = ev.date.valueOf();
    });
    $('#endtime').datepicker({
        format: 'yyyy-mm-dd',
        weekStart: 1,
        autoclose: true,
        todayBtn: 'linked',
        language: 'zh-CN'
    }).on('changeDate', function (ev) {
        var endTime = ev.date.valueOf();
    });

    function openSafeguardTimeDialog() {
        $.ajax({
            type: "Get",
            async: false,
            url: "../BasicDataManagement/WageBaseTable/GetSafeguardTime",
            //data: JSON.stringify(params),
            contentType: "application/json; charset=utf-8",
            datatype: "text",
            success: function (data) {
                $('#recentSafeguardTime').text("当前系统开放时间区间：" + data);
            },
            error: function () {
                toastr.error('获取开放时间失败！');
            }
        });

        $("#dialog-setSafeguardTime").css("display", "block");
        $("#dialog-setSafeguardTime").dialog("open");

    }

    //备份本月算税记录的确认对话框
    $("#confirmDialog_backupTax").dialog({
        autoOpen: false,
        modal: true,
        buttons: {
            "确认": function () {
                $.ajax({
                    type: "POST",
                    async: false,
                    url: "../BasicDataManagement/WageBaseTable/TaxPerOrderBackUp",
                    //data: params,
                    contentType: "application/json; charset=utf-8",
                    datatype: "json",
                    success: function (data) {
                        toastr.info("计税数据备份成功");
                    },
                    error: function () {
                        toastr.error('计税数据备份失败！');
                    }
                });
                $(this).dialog("close");
            },
            "取消": function () {
                $(this).dialog("close");
            }
        }
    });

    //当月数据汇入年度累计表的确认对话框
    $("#confirmDialog_AddYearTable").dialog({
        autoOpen: false,
        modal: true,
        buttons: {
            "确认": function () {
                $.ajax({
                    type: "POST",
                    async: false,
                    url: "../BasicDataManagement/WageBaseTable/AddToYearBaseTable",
                    //data: params,
                    contentType: "application/json; charset=utf-8",
                    datatype: "json",
                    success: function (data) {
                        toastr.info("当月数据汇入年度累计表成功");
                    },
                    error: function () {
                        toastr.error('当月数据汇入年度累计表失败！');
                    }
                });
                $(this).dialog("close");
            },
            "取消": function () {
                $(this).dialog("close");
            }
        }
    });


    //清空初始化工资表确认对话框       
    function clearWageBase(dt) {
        $("#confirmDialog_clearVageBase").dialog({
            autoOpen: false,
            modal: true,
            buttons: {
                "确认": function () {
                    $.ajax({
                        type: "POST",
                        async: false,
                        url: "../BasicDataManagement/WageBaseTable/DeleteAll",
                        //data: params,
                        contentType: "application/json; charset=utf-8",
                        datatype: "json",
                        success: function (data) {
                            dt.ajax.reload();                      
                            toastr.info("工资基础表清空成功");
                        },
                        error: function () {
                            toastr.error('工资基础表清空失败！');
                        }
                    });
                    $(this).dialog("close");
                },
                "取消": function () {
                    $(this).dialog("close");
                }
            }
        });
        $("#confirmDialog_clearVageBase").dialog("open");
    }
    

</script>