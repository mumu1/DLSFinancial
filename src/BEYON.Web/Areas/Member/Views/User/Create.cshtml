@using BEYON.ViewModel.Member
@model UserVM

<link href="~/Scripts/AdminLTE2.3.0/plugins/iCheck/square/blue.css" rel="stylesheet" />
@Html.HiddenFor(t => t.Id)
<div class="form-group">
    <div class="col-sm-2">
        <label style="color: red; margin-left: -8px;">*</label>@Html.LabelFor(model => model.UserName, new { @class = " control-label" })
    </div>

    <div class="col-sm-8">
        @Html.TextBoxFor(model => model.UserName, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.UserName)
    </div>
</div>
<div class="form-group">
    <div class="col-sm-2">
        <label style="color: red; margin-left: -8px;">*</label>@Html.LabelFor(model => model.TrueName, new { @class = "control-label" })
    </div>
    <div class="col-sm-8">
        @Html.TextBoxFor(model => model.TrueName, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.TrueName)
    </div>
</div>

@*<div class="form-group">
    <div class="col-sm-2">
        <label style="color: red; margin-left: -8px;">*</label>@Html.LabelFor(model => model.Email, new { @class = " control-label" })
    </div>
    <div class="col-sm-8">
        @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Email)
    </div>
</div>
<div class="form-group">
    <div class="col-sm-2">
        @Html.LabelFor(model => model.Phone, new { @class = " control-label" })
    </div>
    <div class="col-sm-8">
        @Html.TextBoxFor(model => model.Phone, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Phone)
    </div>
</div>
<div class="form-group">
    <div class="col-sm-2">
        @Html.LabelFor(model => model.Address, new { @class = "control-label" })
    </div>
    <div class="col-sm-8">
        @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Address)
    </div>
</div>*@
  
<div class="form-group">
    <div class="col-sm-2">
        @Html.LabelFor(model => model.CertificateID, new { @class = "control-label" })
    </div>
    <div class="col-sm-8">
        @Html.TextBoxFor(model => model.CertificateID, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.CertificateID)
    </div>
</div>
<div class="form-group">
    <div class="col-sm-2">
        @Html.LabelFor(model => model.Gender, new { @class = " control-label" })
    </div>
    <div class="col-sm-8">
        @Html.TextBoxFor(model => model.Gender, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Gender)
    </div>
</div>
<div class="form-group">
        <div class="col-sm-2">
            @Html.LabelFor(model => model.Department, new { @class = " control-label" })
        </div>
        <div class="col-sm-8">
            @Html.TextBoxFor(model => model.Department, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Department)

        </div>
</div>
<div class="form-group">
    <div class="col-sm-2">
        @Html.LabelFor(model => model.Title, new { @class = "control-label" })

    </div>
    <div class="col-sm-8">
        @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Title)
    </div>
</div>
<div class="form-group">
    <div class="col-sm-2">
        @Html.LabelFor(model => model.Enabled, new { @class = " control-label" })
    </div>
    <div class="checkbox icheck col-sm-8">
        @Html.CheckBoxFor(model => model.Enabled, new { @class = "myCheck" }) @*增加myCheck样式为了避免表格中的checkbox失效*@
        @Html.ValidationMessageFor(model => model.Enabled)
    </div>
</div>
<script>
    $(function () {
        $('input.myCheck').iCheck({
            checkboxClass: 'icheckbox_square-blue',
            radioClass: 'iradio_square-blue',
            increaseArea: '20%' // optional
        });
    });
    function GetDepartmentList() {
        $.ajax({
            type: "GET",
            async: false,
            url: "../BasicDataManagement/Department/GetAllData",
            //data: params,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $("#dept_user").html("");
                $.each(data.data, function (k, v) {
                    $("#dept_user").append("<option>" + v.DepartmentName + "</option>");
                })              
            },
            error: function () {
                toastr.error('获取部门数据失败！');
            }
        });
    }
    function GetTitleList() {
        $.ajax({
            type: "GET",
            async: false,
            url: "../BasicDataManagement/Professional/GetAllData",
            //data: params,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $("#title_user").html("");
                $.each(data.data, function (k, v) {
                    $("#title_user").append("<option>" + v.TitleName + "</option>");
                })
            },
            error: function () {
                toastr.error('获取职称数据失败！');
            }
        });
    }


</script>

